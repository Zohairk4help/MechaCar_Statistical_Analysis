q()
dailyattendsheet <- function (students, Sys.Date())
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car datasetplt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
> plt + geom_density() #visualize distribution using density plot
used_car_data <- read.csv("C:/Users/zohairk/OneDrive/Desktop/personalrepo/Modules/Module15 R/R_Analysis/01_Demo/used_car_data.csv")
View(used_car_data)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
> plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
install.packages("tidyverse")
install.packages("tidyverse")
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
setwd("C:/Users/zohairk/OneDrive/Desktop/personalrepo/Modules/Module15 R/R_Analysis/01_Demo")
setwd("C:/Users/zohairk/OneDrive/Desktop/personalrepo/Modules/Module15 R/R_Analysis/01_Demo")
MechaCar_mpg_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
MechaCar_mpg <- read.csv("C:/Users/zohairk/OneDrive/Desktop/personalrepo/Modules/Module15 R/R_Analysis/01_Demo/MechaCar_mpg.csv")
setwd("C:/Users/zohairk/OneDrive/Desktop/personalrepo/Modules/Module15 R/R_Analysis/01_Demo")
Suspension_Coil_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(Suspension_Coil_table)
rm(Suspension_Coil_table)
Suspension_Coil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
summarize_Suspension_Coil_table <- Suspension_Coil_table %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),SD=sd(PSI),Variance=var(PSI), .groups = 'keep') #create summary table with multiple columns
library(dplyr)
install.packages(c("dplyr", "jsonlite", "tidyverse"))
library(dplyr)
library(jsonlite)
library(tidyverse)
summarize_Suspension_Coil_table <- Suspension_Coil_table %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),SD=sd(PSI),Variance=var(PSI), .groups = 'keep') #create summary table with multiple columns
View(summarize_Suspension_Coil_table)
rm(summarize_Suspension_Coil_table)
total_summary <- Suspension_Coil_table %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),SD=sd(PSI),Variance=var(PSI), .groups = 'keep') #create summary table with multiple columns
View(total_summary)
View(Suspension_Coil_table)
lot_summary <- Suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),SD=sd(PSI),Variance=var(PSI), .groups = 'keep') #create lot_summary table
View(lot_summary)
?t.test()
?t.test()
t.test(Suspension_Coil_table$PSI,mu=1500) #compare sample versus population means- one-sampl test
t.test(log10(Suspension_Coil_table$PSI),mu=mean(log10(Suspension_Coil_table$PSI)))
t.test(log10(Suspension_Coil_table$PSI),mu=1500(log10(Suspension_Coil_table$PSI)))
t.test(log10(Suspension_Coil_table$PSI),mu=1500)
t.test(log10(Suspension_Coil_table$PSI),mu=log(1500))
t.test(Suspension_Coil_table$PSI,mu=1500, alternative = "less") #compare sample versus population means- one-sampl test
t.test(Suspension_Coil_table$PSI,mu=1500, alternative = "greater") #compare sample versus population means- one-sampl test
df <- structure(list(code = c(100, 100, 100, 101, 101, 101, 102, 102,
102, 103, 103, 103), treatment = c("a", "a", "a", "b", "b", "b",
"a", "a", "a", "b", "b", "b"), sex = c("f", "f", "f", "m", "m",
"m", "f", "f", "f", "f", "f", "f"), time = c(1, 2, 3, 1, 2, 3,
1, 2, 3, 1, 2, 3), `outcome 1` = c(21, 23, 33, 44, 45, 47, 22,
34, 22, 55, 45, 56), `outcome 2` = c(21, 32, 33, 33, 44, 45,
22, 57, 98, 65, 42, 42), `outcome 3` = c(62, 84, 63, 51, 45,
74, 85, 34, 96, 86, 45, 47)), .Names = c("code", "treatment",
"sex", "time", "outcome 1", "outcome 2", "outcome 3"),
class = c("tbl_df", "tbl", "data.frame"), row.names = c(NA, -12L))
View(df)
var_a <- df$`outcome 1`[df$treatment=="a" & df$time==3]
var_b <- df$`outcome 1`[df$treatment=="b" & df$time==3]
t.test(var_a,var_b)
var_lot1 <- Suspension_Coil_table$PSI[Suspension_Coil_table$Manufacturing_Lot=="Lot1"]
var_lot2 <- Suspension_Coil_table$PSI[Suspension_Coil_table$Manufacturing_Lot=="Lot2"]
var_lot3 <- Suspension_Coil_table$PSI[Suspension_Coil_table$Manufacturing_Lot=="Lot3"]
rm(var_a,var_b,df)
t.test(var_lot1,mu=1500)
t.test(var_lot2,mu=1500)
t.test(var_lot3,mu=1500)
